Python was created in 1991

# Origin

It is used for different purposes in development such as:
- BackEnd web development
- Math
- Scripting

# Start

Python files has .py extension. 
To enter python command line write python

# Syntax

Indentations (spaces at the start of line) in python indicates a block of code

'#' used to start writing a comment

"""
a
""" is a way to write multiple line of comments

## Variables

No command for declaring a variable, must be assigned to create

A variable name must start with a letter or the underscore character
A variable name cannot start with a number
A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
Variable names are case-sensitive (age, Age and AGE are three different variables)
A variable name cannot be any of the Python keywords.

# types
Text Type:	str
Numeric Types:	int, float, complex
Sequence Types:	list, tuple, range
Mapping Type:	dict
Set Types:	set, frozenset
Boolean Type:	bool
Binary Types:	bytes, bytearray, memoryview
None Type:	NoneType

type() -- method to get type

Unicode is a character encoding standard for text

Python literals or constants are the notation for representing a fixed value in source code.

Python Operators Precedence: 
1 **
2 *, /, //, %
3 +, -
4 <<, >>
5 &
6 ^ |
7 >=, >, <=, <
8 ==, !=
9 = %= /= //= -= += *= **=
10 is, is not
11 in, not in
12 not, or, and

## control flow

loops are used to iterate over a sequence (list, tuple, string) or other iterable objects
loop can be for or while, they can have else statement

match is used as switch

## function

### signature

def function_name( parameters ):
    "function_dostring"
    function_suite
    return [expression]

Неизменяемые объекты (числа, строки, кортежи) передаются как по значению

Изменяемые объекты (списки, словари, множества) передаются как по ссылке

The behavior also depends on whether the passed object is mutable or immutable. 
Python numeric object is immutable.
When a numeric object is passed, 
and then the function changes the value of the formal argument,
it actually creates a new object in the memory,
leaving the original variable unchanged.

### parameters order

positional -> regular -> default -> arbitary -> keyword-only -> arbitary keyword

def function(a, /, b, c=3, *args, *, d, **kwargs):

## Module 

A module is a file containing definition of functions, classes, variables, constants or any other Python object

- import all names from module `from modname import *`
- assign an alias to module `from modulename as alias`
